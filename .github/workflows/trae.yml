name: Trae Agent

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened]

jobs:
  trae:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@trae')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@trae')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@trae')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@trae') || contains(github.event.issue.title, '@trae'))) ||
      (github.event_name == 'pull_request' && (github.event.action == 'opened' || contains(github.event.pull_request.body, '@trae')))
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Clone and setup trae-agent
        run: |
          git clone https://github.com/bytedance/trae-agent.git /tmp/trae-agent
          cd /tmp/trae-agent
          uv venv
          uv sync --all-extras

      - name: Create trae config
        run: |
          mkdir -p ~/.config/trae
          cat > ~/.config/trae/trae_config.json << 'EOF'
          {
            "default_provider": "anthropic",
            "max_steps": 30,
            "enable_lakeview": true,
            "model_providers": {
              "anthropic": {
                "api_key": "${{ secrets.ANTHROPIC_API_KEY }}",
                "model": "claude-sonnet-4-20250514",
                "max_tokens": 4096,
                "temperature": 0.5,
                "top_p": 1,
                "max_retries": 10
              },
              "openai": {
                "api_key": "${{ secrets.OPENAI_API_KEY }}",
                "model": "gpt-4o",
                "max_tokens": 4096,
                "temperature": 0.5,
                "top_p": 1,
                "max_retries": 10
              }
            }
          }
          EOF

      - name: Extract task from comment/issue
        id: extract_task
        run: |
          echo "Extracting task from GitHub event..."
          
          # Extract task based on event type
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            TASK_TEXT=$(echo '${{ github.event.comment.body }}' | sed 's/@trae//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          elif [[ "${{ github.event_name }}" == "issues" ]]; then
            TASK_TEXT=$(echo '${{ github.event.issue.body }}' | sed 's/@trae//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            TASK_TEXT=$(echo '${{ github.event.pull_request.body }}' | sed 's/@trae//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          else
            TASK_TEXT="Please analyze the repository and suggest improvements"
          fi
          
          # Default task if empty
          if [[ -z "$TASK_TEXT" ]]; then
            TASK_TEXT="Please analyze the repository and suggest improvements"
          fi
          
          echo "task<<EOF" >> $GITHUB_OUTPUT
          echo "$TASK_TEXT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run trae-agent
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cd /tmp/trae-agent
          echo "Running trae-agent with task: ${{ steps.extract_task.outputs.task }}"
          
          # Run trae-agent with the extracted task
          uv run trae-cli run "${{ steps.extract_task.outputs.task }}" \
            --provider anthropic \
            --model claude-sonnet-4-20250514 \
            --working-dir ${{ github.workspace }} \
            --max-steps 30 \
            --trajectory-file ${{ github.workspace }}/trae_trajectory.json

      - name: Upload trajectory
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trae-trajectory
          path: trae_trajectory.json

      - name: Create summary comment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let trajectoryContent = "Trajectory file not found or empty";
            try {
              const trajectoryPath = path.join(process.env.GITHUB_WORKSPACE, 'trae_trajectory.json');
              if (fs.existsSync(trajectoryPath)) {
                const rawData = fs.readFileSync(trajectoryPath, 'utf8');
                const trajectory = JSON.parse(rawData);
                
                // Create a summary from the trajectory
                const summary = {
                  task: trajectory.task || "Unknown task",
                  status: trajectory.success ? "‚úÖ Success" : "‚ùå Failed",
                  steps: trajectory.agent_steps ? trajectory.agent_steps.length : 0,
                  provider: trajectory.provider || "Unknown",
                  model: trajectory.model || "Unknown"
                };
                
                trajectoryContent = `## Trae Agent Execution Summary
            
            **Task**: ${summary.task}
            **Status**: ${summary.status}
            **Steps**: ${summary.steps}
            **Provider**: ${summary.provider}
            **Model**: ${summary.model}
            
            **Trajectory**: Available in job artifacts
            `;
              }
            } catch (error) {
              trajectoryContent = `Error reading trajectory: ${error.message}`;
            }
            
            const comment = `## ü§ñ Trae Agent Results
            
            ${trajectoryContent}
            
            ---
            *Generated by [Trae Agent](https://github.com/bytedance/trae-agent)*`;
            
            // Post comment based on event type
            if (context.eventName === 'issues' || context.eventName === 'issue_comment') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            } else if (context.eventName === 'pull_request' || 
                       context.eventName === 'pull_request_review_comment' || 
                       context.eventName === 'pull_request_review') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: comment
              });
            }